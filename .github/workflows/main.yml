name: Build and Deploy to AWS
on:
  push:
    branches:
      - ckan-setup
env:
  PROJECT_NAME: wri-odp
  BRANCH_NAME: dev
permissions:
      id-token: write
      contents: read    
jobs:
  BuildAndPushImageToAWS:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Print-assume-role
        run: aws sts get-caller-identity
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ckan-dev-ecr
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Update values.yaml
        run: |
          echo $BRANCH_NAME
          cd ckan-deployment
          curl https://raw.githubusercontent.com/datopian/devops-tools/master/scripts/templater.sh > /tmp/templater.sh
          bash /tmp/templater.sh helm-templates/values.yaml.$BRANCH_NAME.template > helm-templates/values.yaml
          mkdir -p /home/runner/.kube
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.CLUSTER_NAME }} --dry-run > /home/runner/.kube/config
        env:
          GITHUB_SHA: '${{ github.sha }}'
      - name: Helm deploy
        uses: datopian/helm@master
        with:
          command: helm upgrade -i ${{ env.PROJECT_NAME }}-dev-release ./helm-templates -f ./helm-templates/values.yaml -n ${{ env.PROJECT_NAME }}-dev --create-namespace --wait

