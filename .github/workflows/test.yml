name: Test failing tests
on:
  workflow_dispatch
env:
  PROJECT_NAME: wri-odp
  BRANCH_NAME: dev
permissions:
  id-token: write
  contents: read
  security-events: write
jobs:
  testfailling:
    name: Test failing tests
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Install `Xvfb` and others to run browsers for end-to-end testing in local CI/CD simulations
        run: sudo apt-get update && sudo apt-get install -y xvfb && npx playwright install-deps
      - name: Add CKAN url to hosts
        run: sudo echo "127.0.0.1 ckan-dev" | sudo tee -a /etc/hosts
      - name: Add Minio url to hosts
        run: sudo echo "127.0.0.1 minio" | sudo tee -a /etc/hosts
      - name: Add Frontend url to hosts
        run: sudo echo "127.0.0.1 frontend" | sudo tee -a /etc/hosts
      - name: Create .env
        run: cp .env.example .env
        working-directory: ./ckan-backend-dev
      - name: Set up Docker Containers
        run: |
          docker compose -f docker-compose.dev.yml up --build -d
        working-directory: ./ckan-backend-dev
      - name: Initialize the ckanext-issues table
        run: docker exec ckan-wri sh -c "ckan -c production.ini issuesdb"
      - name: Update the ckanext-issues table
        run: docker exec ckan-wri sh -c "ckan -c production.ini issuesupdate"
      - name: Initialize the notification table
        run: docker exec ckan-wri sh -c "ckan -c production.ini notificationdb"
      - name: Initialize the pending datasets table
        run: docker exec ckan-wri sh -c "ckan -c production.ini pendingdatasetsdb"
      - name: Create sysadmin API for Authorization
        run: bash ./ckan-backend-dev/ckan/scripts/cypress_setup.sh
      - name: Print Logs
        run: docker logs wri-frontend
        working-directory: ./ckan-backend-dev
      - name: Check open containers
        run: docker ps
        working-directory: ./ckan-backend-dev
      - name: Print Logs
        run: docker logs wri-frontend
        working-directory: ./ckan-backend-dev
      - name: Cypress Install and Frontend setup
        uses: cypress-io/github-action@v6
        with:
          wait-on: 'http://127.0.0.1:3000'
          wait-on-timeout: 60
          node-version: 18
          runTests: false
          working-directory: ./e2e-tests
      - name: Run frontend tests ðŸ§ª
        uses: cypress-io/github-action@v6
        with:
          command: npx cypress run --spec cypress/e2e/dashboard.cy.js
          #command: npx cypress open
          working-directory: ./e2e-tests
      - name: Tear down containers
        if: failure() || success()
        run: docker compose -f docker-compose.dev.yml --env-file .env.example down -v --remove-orphans
        working-directory: ./ckan-backend-dev
