// @ts-nocheck
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import classnames from 'classnames';
import Tooltip from '../../../../tooltip';
import LegendOpacityTooltip from './legend-item-button-opacity-tooltip';

class LegendItemButtonOpacity extends PureComponent {
	static propTypes = {
		layers: PropTypes.arrayOf(PropTypes.shape({})),
		activeLayer: PropTypes.shape({}),
		visibility: PropTypes.bool,
		tooltipOpened: PropTypes.bool,
		icon: PropTypes.string,
		className: PropTypes.string,
		focusStyle: PropTypes.shape({}),
		defaultStyle: PropTypes.shape({}),
		enabledStyle: PropTypes.shape({}),
		disabledStyle: PropTypes.shape({}),
		tooltipText: PropTypes.string,
		scrolling: PropTypes.bool,
		onChangeOpacity: PropTypes.func,
		onTooltipVisibilityChange: PropTypes.func,
	};

	static defaultProps = {
		layers: [],
		activeLayer: {},
		visibility: true,
		icon: '',
		className: '',
		focusStyle: {},
		defaultStyle: {},
		enabledStyle: {},
		disabledStyle: {},
		tooltipOpened: false,
		tooltipText: '',
		scrolling: false,

		onChangeOpacity: () => {},
		onTooltipVisibilityChange: () => {},
	};

	state = {
		visibilityHover: false,
		visibilityClick: false,
	};

	componentWillReceiveProps(nextProps) {
		const { scrolling } = nextProps;

		if (scrolling) {
			this.onTooltipVisibilityChange(false);
		}
	}

	onTooltipVisibilityChange = (v) => {
		const { visibility, onTooltipVisibilityChange } = this.props;

		if (visibility) {
			this.setState({
				visibilityHover: false,
				visibilityClick: v,
			});

			onTooltipVisibilityChange(v);
		}
	};

	setHoverText = (tooltipText, opacity, visibility) => {
		if (tooltipText) return tooltipText;

		if (!visibility) return 'Opacity (disabled)';

		return `Opacity ${
			typeof opacity !== 'undefined'
				? `(${Math.round(opacity * 100)}%)`
				: ''
		}`;
	};

	render() {
		const {
			layers,
			visibility,
			activeLayer,
			tooltipOpened,
			icon,
			className,
			enabledStyle,
			defaultStyle,
			disabledStyle,
			focusStyle,
			tooltipText,
			scrolling,
			onChangeOpacity,
			...rest
		} = this.props;

		const { visibilityClick, visibilityHover } = this.state;
		const { opacity } = activeLayer;
		let iconStyle = visibility ? defaultStyle : disabledStyle;
		if (visibility && (visibilityHover || visibilityClick)) {
			iconStyle = focusStyle;
		}
		if (visibility && opacity < 1) iconStyle = enabledStyle;

		return (
			<Tooltip
				overlay={
					visibility && (
						<LegendOpacityTooltip
							layers={layers}
							activeLayer={activeLayer}
							onChangeOpacity={onChangeOpacity}
							{...rest}
						/>
					)
				}
				visible={visibility && visibilityClick}
				overlayClassName={`c-rc-tooltip ${classnames({
					'-default': visibility,
				})} ${className || ''}`}
				placement="top"
				trigger={['click']}
				onVisibleChange={this.onTooltipVisibilityChange}
				destroyTooltipOnHide
			>
				<Tooltip
					visible={visibilityHover && !visibilityClick}
					overlay={this.setHoverText(
						tooltipText,
						opacity,
						visibility
					)}
					overlayClassName="c-rc-tooltip -default"
					placement="top"
					trigger={tooltipOpened ? '' : 'hover'}
					onVisibleChange={(v) =>
						this.setState({ visibilityHover: v })
					}
					destroyTooltipOnHide>
					<button
						type="button"
						className={`inline-block p-0 bg-transparent outline-none border-0 cursor-pointer ${classnames({
							'cursor-not-allowed': !visibility,
						})}`}
						aria-label="Change opacity"
					>
						{/* TODO ADJUST THIS COMPONENT TO USE THE HEROICON LIB <Icon name={icon || 'icon-opacity'} className="-small" style={iconStyle} /> */}
						{/* <!-- Generated by IcoMoon.io --> */}
						<svg
							version="1.1"
							width={13}
							xmlns="http://www.w3.org/2000/svg"
							className='w-[14px] h-[14px]'
							viewBox="0 0 29 32"
						>
							<title>opacity</title>
							<path d="M29.333 7.92c-0.761-1.345-1.646-2.503-2.667-3.526l0 0v23.211c1.040-1.040 1.939-2.224 2.667-3.525v-16.16zM21.333 0.88c-0.752-0.308-1.646-0.577-2.569-0.762l-0.098-0.016v31.797c0.92-0.179 1.813-0.443 2.667-0.779v-30.24zM13.333 32c-7.547-1.181-13.333-7.893-13.333-16s5.787-14.819 13.333-16v32z"></path>
						</svg>
					</button>
				</Tooltip>
			</Tooltip>
		);
	}
}

export default LegendItemButtonOpacity;
